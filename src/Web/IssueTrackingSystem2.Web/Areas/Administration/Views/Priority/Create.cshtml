@model IssueTrackingSystem2.Web.InputModels.Priority.PriorityInputModel

@{
    ViewData["Title"] = "Create Priority";
}

<h1>@ViewData["Title"]</h1>

<hr />
@if (ViewData.ContainsKey(ValuesConstants.InvalidArgument))
{
    <h4>@ViewData[ValuesConstants.InvalidArgument]</h4>
}

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control text-success" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div>
                <input asp-for="ProjectId" value="@Model.ProjectId" hidden />
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-area=""
       asp-controller="@ValuesConstants.ProjectControllerName"
       asp-action="@ValuesConstants.DetailsActionName"
       class="btn btn-info">
        Back to List
    </a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}