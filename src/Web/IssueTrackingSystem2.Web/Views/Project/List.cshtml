@using IssueTrackingSystem2.Web.ViewModels.Project
@model IEnumerable<ProjectListViewModel>

@{
    ViewData["Title"] = $"{this.User.Identity.Name}'s Affiliated Projects";
}

<h1>@ViewData["Title"]</h1>

<hr />
@if (this.User.IsInRole(GlobalConstants.AdministratorRoleName))
{
    <div>
        <a asp-area="@ValuesConstants.AdministrationAreaName"
           asp-controller="@ValuesConstants.ProjectControllerName"
           asp-action="@ValuesConstants.CreateActionName"
           class="btn btn-success text-dark font-weight-bold">
            @($"{@ValuesConstants.Create} {GlobalConstants.Project}")
        </a>
    </div>
    @*<div>
        <a asp-controller="@ValuesConstants.LabelControllerName"
           asp-action="@ValuesConstants.CreateActionName"
           class="btn btn-success text-dark font-weight-bold">
            @($"{@ValuesConstants.Create} {GlobalConstants.Label}")
        </a>
    </div>*@

    <br />
    <h4>Created projects by @this.User.Identity.Name</h4>
    if (Model != null && Model.Any())
    {
        <partial name="_ProjectsPartial" model="Model" />
    }
    else
    {
        <h3>@this.User.Identity.Name still have not created any projects</h3>
    }
}
else
{
    var isProjectLeader = Model.Where(model => model.Leader.Id == this.UserManager.GetUserId(this.User)).Any();
    if (isProjectLeader)
    {
        @*<div>
            <a asp-controller="@ValuesConstants.LabelControllerName"
               asp-action="@ValuesConstants.CreateActionName"
               asp-route-leaderId="@this.UserManager.GetUserId(this.User)"
               class="btn btn-success font-weight-bold">
                @($"{@ValuesConstants.Create} {GlobalConstants.Label}")
            </a>
        </div>
        <br />*@
        <h4>Projects that @this.User.Identity.Name is a Project Leader</h4>
        <partial name="_ProjectsPartial"
                 model="@Model.Where(model => model.Leader.Id == this.UserManager.GetUserId(this.User))" />
    }

    var isIssueAssignee = Model
        .Where(model => model.Milestones
            .Any(milestone => milestone.Issues
                .Any(issue => issue.AssigneeId == this.UserManager.GetUserId(this.User))))
        .Any();

    if (isIssueAssignee)
    {
        @*<div>
            <a asp-controller="@ValuesConstants.LabelControllerName"
               asp-action="@ValuesConstants.CreateActionName"
               asp-route-assigneeId="@this.UserManager.GetUserId(this.User)"
               class="btn btn-success font-weight-bold">
                @($"{@ValuesConstants.Create} {GlobalConstants.Label}")
            </a>
        </div>*@
        <br />
        <h4>Projects with issues that @this.User.Identity.Name is an Issue Assignee</h4>
        <partial name="_ProjectsPartial"
                 model="@Model
                            .Where(model => model.Milestones
                                .Any(milestone => milestone.Issues
                                    .Any(issue => issue.AssigneeId == this.UserManager.GetUserId(this.User))))" />
    }

    @if (!isProjectLeader && !isIssueAssignee)
    {
        <h4>
            @string.Format(
                format: MessagesConstants.StillHaveNotBeenAssignedTo,
                arg0: this.User.Identity.Name,
                arg1: $"{GlobalConstants.Projects} or {GlobalConstants.Issues}")
        </h4>
    }
}
