@model ProjectDetailsViewModel
@{
    ViewData["Title"] = "Project Details";
}

<h1>@ViewData["Title"]</h1>

<hr />
<div class="flex-elements">
    <div class="col-md-8">
        @if (this.User.IsInRole(GlobalConstants.AdministratorRoleName)
       || Model.Leader.Id == this.UserManager.GetUserId(this.User))
        {
            <div>
                <a asp-area=""
                   asp-controller=@ValuesConstants.ProjectControllerName
                   asp-action=@ValuesConstants.UpdateActionName
                   asp-route-id="@Model.Id"
                   asp-route-leaderId="@Model.Leader.Id" class="btn btn-success button">
                    @ValuesConstants.Update
                </a>
                <a asp-area=""
                   asp-controller=@ValuesConstants.MilestoneControllerName
                   asp-action=@ValuesConstants.CreateActionName
                   asp-route-projectId=@Model.Id
                   asp-route-leaderId="@Model.Leader.Id"
                   class="btn btn-success button">
                    Create Milestone
                </a>
                <a asp-area=""
                   asp-controller=@ValuesConstants.LabelControllerName
                   asp-action=@ValuesConstants.CreateActionName
                   asp-route-leaderId="@Model.Leader.Id"
                   class="btn btn-success button">
                    Create Label
                </a>

                @if (this.User.IsInRole(GlobalConstants.AdministratorRoleName))
                {
                    <a asp-area=@ValuesConstants.AdministrationAreaName
                       asp-controller=@ValuesConstants.PriorityControllerName
                       asp-action=@ValuesConstants.CreateActionName
                       asp-route-projectId="@Model.Id"
                       class="btn btn-success button">
                        <span class="text-dark font-weight-bold">Create Priority</span>
                    </a>
                }
            </div>
        }

        <hr />
        <table class="table table-striped">
            <tr>
                <th>@nameof(ProjectDetailsViewModel.ProjectKey).SplitStringByCapitalLetters():</th>
                <td>@Model.ProjectKey</td>
            </tr>
            <tr>
                <th>@nameof(ProjectDetailsViewModel.Name):</th>
                <td>@Model.Name</td>
            </tr>
            <tr>
                <th>@nameof(ProjectDetailsViewModel.Description):</th>
                <td>@Model.Description</td>
            </tr>
            <tr>
                <th>@nameof(ProjectDetailsViewModel.Leader)@*.SplitStringByCapitalLetters()*@:</th>
                <td>(Current ID: @Model.Leader.Id) @Model.Leader.UserName</td>
            </tr>
            <tr>
                <th>@nameof(ProjectDetailsViewModel.Priorities):</th>
                @if (Model.Priorities != null && Model.Priorities.Any())
                {
                    <td><partial name="_PrioritiesPartial" model="Model.Priorities" /></td>
                }
                else
                {
                    <td>
                        @string.Format(
                            format: MessagesConstants.StillNotAddedItems,
                            arg0: GlobalConstants.Priorities,
                            arg1: Model.Name)
                    </td>
                }
            </tr>
            <tr>
                <th>@nameof(ProjectDetailsViewModel.Labels):</th>
                @if (Model.Labels != null && Model.Labels.Any())
                {
                    <td><partial name="_LabelsPartial" model="Model.Labels"></td>
                }
                else
                {
                    <td>
                        @string.Format(
                            format: MessagesConstants.StillNotAddedItems,
                            arg0: GlobalConstants.Labels,
                            arg1: Model.Name)
                    </td>
                }
            </tr>
            <tr>
                <th>@nameof(ProjectDetailsViewModel.CreatedOn).SplitStringByCapitalLetters():</th>
                <td>@Model.CreatedOn</td>
            </tr>
        </table>
    </div>

    <hr />
    <div>
        <h4>@($"{Model.Name}'s Milestones")</h4>
        <h6>@string.Format(format: MessagesConstants.ClickOnDesiredRow, arg0: GlobalConstants.Milestone)</h6>

        @if (Model.Milestones != null && Model.Milestones.Any())
        {
            <div class="table table-striped col-md-6 fixed">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>@nameof(MilestoneListViewModel.Title)</th>
                            <th>@nameof(MilestoneListViewModel.StartDate).SplitStringByCapitalLetters()</th>
                            <th>@nameof(MilestoneListViewModel.CompletionDate).SplitStringByCapitalLetters()</th>
                            <th>@nameof(MilestoneListViewModel.Status)</th>
                            <th>@nameof(MilestoneListViewModel.Issues)</th>
                            <th>@nameof(MilestoneListViewModel.CompletedIssues).SplitStringByCapitalLetters()</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var milestone in Model.Milestones)
                        {
                            <tr onclick="location.href = '@(Url.Action(ValuesConstants.DetailsActionName, ValuesConstants.MilestoneControllerName, new { id = milestone.Id }))'">
                                <td>@milestone.Title</td>
                                <td>
                                    @milestone.StartDate
                                </td>
                                <td>
                                    @milestone.CompletionDate
                                </td>
                                <td>@milestone.Status.Name</td>
                                <td>@milestone.Issues.Count</td>
                                <td>@milestone.CompletedIssues.Count</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div>
                <p>
                    @string.Format(
                        format: MessagesConstants.StillNotAddedItems,
                        arg0: GlobalConstants.Milestones,
                        arg1: Model.Name)
                </p>
            </div>
        }
    </div>
</div>

<div>
    <a asp-action="@ValuesConstants.ListActionName", 
       asp-controller="@ValuesConstants.ProjectControllerName" 
       class="btn btn-info">Back to List</a>
</div>