@model ProjectUpdateInputModel

@{
    ViewData["Title"] = "Edit Project";
}

<h1>@ViewData["Title"]</h1>

<hr />

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <div class="d-flex">
                    <label asp-for="ProjectKey" class="control-label"></label>
                </div>
                <input type="text"
                       id="description"
                       placeholder="Description..."
                       class="form-control text-primary text-center"
                       value="@Model.ProjectKey"
                       asp-for="ProjectKey" 
                       readonly />

                <span asp-validation-for="ProjectKey" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="d-flex">
                    <label asp-for="Name" class="control-label"></label>
                </div>
                <input type="text"
                       id="name"
                       placeholder="Name..."
                       class="form-control text-primary text-center"
                       value="@Model.Name"
                       asp-for="Name" />

                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="d-flex">
                    <label asp-for="Description" class="control-label"></label>
                </div>
                <input type="text"
                       id="description"
                       placeholder="Description..."
                       class="form-control text-primary text-center"
                       value="@Model.Description"
                       asp-for="Description" />

                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            @if (this.User.IsInRole(GlobalConstants.AdministratorRoleName))
            {
                <div class="form-group">
                    <div class="d-flex">
                        <label asp-for="LeaderId" class="control-label"></label>
                    </div>
                    <select class="form-control text-primary" id="user" asp-for="LeaderId">
                        <option selected disabled>--- Select Project Leader ---</option>
                        @foreach (var user in (SelectList)this.ViewData[GlobalConstants.Users])
                        {
                            if (user.Value == Model.LeaderId)
                            {
                                <option value="@user.Value" selected>@user.Text</option>
                            }
                            else
                            {
                                <option value="@user.Value">@user.Text</option>
                            }
                        }
                    </select>
                    <span asp-validation-for="LeaderId" class="text-danger"></span>
                </div>
            }

            @*<div class="form-group">
                <div class="d-flex justify-content-center">
                    <label asp-for="Priorities" class="control-label"></label>
                </div>
                <input type="text"
                       id="priorities"
                       placeholder="Priorities..."
                       class="form-control text-primary text-center"
                       value="@Model.Priorities"
                       asp-for="Priorities" />

                <span asp-validation-for="Priorities" class="text-danger"></span>
            </div>*@
            <div class="form-group">
                <input type="submit" value="Submit" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Dashboard" , asp-controller="HomeController">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

